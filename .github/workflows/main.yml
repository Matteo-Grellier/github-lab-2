name: CI pour Appli Python

on:
  push:
    branches:
      - release

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r code-appli-python/vote/requirements.txt
          pip install flake8

      - name: Run Lint
        run: |
          flake8 ./code-appli-python/vote --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 ./code-appli-python/vote --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r code-appli-python/vote/requirements.txt
          pip install flake8

      - name: Run Lint
        run: |
          flake8 ./code-appli-python/vote --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 ./code-appli-python/vote --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: |
            .
            !./.git
            !./.github
            !./*.md

  publish:
    needs: [lint, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: my-artifact
          path: ./build
      - name: Display structure of downloaded files
        run: ls -R .
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: release
          release_name: Release release
          draft: false
          prerelease: false
      - name: Pourquoi faire un deuxieme zip
        run: zip -r app.zip /build
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./app.zip
          asset_name: app.zip
          asset_content_type: application/zip
